// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http.proto

#ifndef PROTOBUF_http_2eproto__INCLUDED
#define PROTOBUF_http_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_http_2eproto();
void protobuf_AssignDesc_http_2eproto();
void protobuf_ShutdownFile_http_2eproto();

class HttpMsg;
class HttpMsg_Upgrade;

// ===================================================================

class HttpMsg_Upgrade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HttpMsg.Upgrade) */ {
 public:
  HttpMsg_Upgrade();
  virtual ~HttpMsg_Upgrade();

  HttpMsg_Upgrade(const HttpMsg_Upgrade& from);

  inline HttpMsg_Upgrade& operator=(const HttpMsg_Upgrade& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpMsg_Upgrade& default_instance();

  void Swap(HttpMsg_Upgrade* other);

  // implements Message ----------------------------------------------

  inline HttpMsg_Upgrade* New() const { return New(NULL); }

  HttpMsg_Upgrade* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpMsg_Upgrade& from);
  void MergeFrom(const HttpMsg_Upgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpMsg_Upgrade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_upgrade = 1;
  void clear_is_upgrade();
  static const int kIsUpgradeFieldNumber = 1;
  bool is_upgrade() const;
  void set_is_upgrade(bool value);

  // optional string protocol = 2;
  void clear_protocol();
  static const int kProtocolFieldNumber = 2;
  const ::std::string& protocol() const;
  void set_protocol(const ::std::string& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  ::std::string* mutable_protocol();
  ::std::string* release_protocol();
  void set_allocated_protocol(::std::string* protocol);

  // @@protoc_insertion_point(class_scope:HttpMsg.Upgrade)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr protocol_;
  bool is_upgrade_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_http_2eproto();
  friend void protobuf_AssignDesc_http_2eproto();
  friend void protobuf_ShutdownFile_http_2eproto();

  void InitAsDefaultInstance();
  static HttpMsg_Upgrade* default_instance_;
};
// -------------------------------------------------------------------

class HttpMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HttpMsg) */ {
 public:
  HttpMsg();
  virtual ~HttpMsg();

  HttpMsg(const HttpMsg& from);

  inline HttpMsg& operator=(const HttpMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpMsg& default_instance();

  void Swap(HttpMsg* other);

  // implements Message ----------------------------------------------

  inline HttpMsg* New() const { return New(NULL); }

  HttpMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpMsg& from);
  void MergeFrom(const HttpMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HttpMsg_Upgrade Upgrade;

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 http_major = 2;
  void clear_http_major();
  static const int kHttpMajorFieldNumber = 2;
  ::google::protobuf::int32 http_major() const;
  void set_http_major(::google::protobuf::int32 value);

  // optional int32 http_minor = 3;
  void clear_http_minor();
  static const int kHttpMinorFieldNumber = 3;
  ::google::protobuf::int32 http_minor() const;
  void set_http_minor(::google::protobuf::int32 value);

  // optional int32 content_length = 4;
  void clear_content_length();
  static const int kContentLengthFieldNumber = 4;
  ::google::protobuf::int32 content_length() const;
  void set_content_length(::google::protobuf::int32 value);

  // optional int32 method = 5;
  void clear_method();
  static const int kMethodFieldNumber = 5;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // optional int32 status_code = 6;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 6;
  ::google::protobuf::int32 status_code() const;
  void set_status_code(::google::protobuf::int32 value);

  // optional int32 encoding = 7;
  void clear_encoding();
  static const int kEncodingFieldNumber = 7;
  ::google::protobuf::int32 encoding() const;
  void set_encoding(::google::protobuf::int32 value);

  // optional string url = 8;
  void clear_url();
  static const int kUrlFieldNumber = 8;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // map<string, string> headers = 9;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_headers();

  // optional bytes body = 10;
  void clear_body();
  static const int kBodyFieldNumber = 10;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // map<string, string> params = 11;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 11;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_params();

  // optional .HttpMsg.Upgrade upgrade = 12;
  bool has_upgrade() const;
  void clear_upgrade();
  static const int kUpgradeFieldNumber = 12;
  const ::HttpMsg_Upgrade& upgrade() const;
  ::HttpMsg_Upgrade* mutable_upgrade();
  ::HttpMsg_Upgrade* release_upgrade();
  void set_allocated_upgrade(::HttpMsg_Upgrade* upgrade);

  // optional float keep_alive = 13;
  void clear_keep_alive();
  static const int kKeepAliveFieldNumber = 13;
  float keep_alive() const;
  void set_keep_alive(float value);

  // optional string path = 14;
  void clear_path();
  static const int kPathFieldNumber = 14;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bool is_decoding = 15;
  void clear_is_decoding();
  static const int kIsDecodingFieldNumber = 15;
  bool is_decoding() const;
  void set_is_decoding(bool value);

  // optional bool chunk_notice = 19;
  void clear_chunk_notice();
  static const int kChunkNoticeFieldNumber = 19;
  bool chunk_notice() const;
  void set_chunk_notice(bool value);

  // optional uint32 stream_id = 20;
  void clear_stream_id();
  static const int kStreamIdFieldNumber = 20;
  ::google::protobuf::uint32 stream_id() const;
  void set_stream_id(::google::protobuf::uint32 value);

  // optional string hpack_data = 21;
  void clear_hpack_data();
  static const int kHpackDataFieldNumber = 21;
  const ::std::string& hpack_data() const;
  void set_hpack_data(const ::std::string& value);
  void set_hpack_data(const char* value);
  void set_hpack_data(const char* value, size_t size);
  ::std::string* mutable_hpack_data();
  ::std::string* release_hpack_data();
  void set_allocated_hpack_data(::std::string* hpack_data);

  // repeated string adding_without_index_headers = 22;
  int adding_without_index_headers_size() const;
  void clear_adding_without_index_headers();
  static const int kAddingWithoutIndexHeadersFieldNumber = 22;
  const ::std::string& adding_without_index_headers(int index) const;
  ::std::string* mutable_adding_without_index_headers(int index);
  void set_adding_without_index_headers(int index, const ::std::string& value);
  void set_adding_without_index_headers(int index, const char* value);
  void set_adding_without_index_headers(int index, const char* value, size_t size);
  ::std::string* add_adding_without_index_headers();
  void add_adding_without_index_headers(const ::std::string& value);
  void add_adding_without_index_headers(const char* value);
  void add_adding_without_index_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& adding_without_index_headers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_adding_without_index_headers();

  // repeated string deleting_without_index_headers = 23;
  int deleting_without_index_headers_size() const;
  void clear_deleting_without_index_headers();
  static const int kDeletingWithoutIndexHeadersFieldNumber = 23;
  const ::std::string& deleting_without_index_headers(int index) const;
  ::std::string* mutable_deleting_without_index_headers(int index);
  void set_deleting_without_index_headers(int index, const ::std::string& value);
  void set_deleting_without_index_headers(int index, const char* value);
  void set_deleting_without_index_headers(int index, const char* value, size_t size);
  ::std::string* add_deleting_without_index_headers();
  void add_deleting_without_index_headers(const ::std::string& value);
  void add_deleting_without_index_headers(const char* value);
  void add_deleting_without_index_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& deleting_without_index_headers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deleting_without_index_headers();

  // repeated string adding_never_index_headers = 24;
  int adding_never_index_headers_size() const;
  void clear_adding_never_index_headers();
  static const int kAddingNeverIndexHeadersFieldNumber = 24;
  const ::std::string& adding_never_index_headers(int index) const;
  ::std::string* mutable_adding_never_index_headers(int index);
  void set_adding_never_index_headers(int index, const ::std::string& value);
  void set_adding_never_index_headers(int index, const char* value);
  void set_adding_never_index_headers(int index, const char* value, size_t size);
  ::std::string* add_adding_never_index_headers();
  void add_adding_never_index_headers(const ::std::string& value);
  void add_adding_never_index_headers(const char* value);
  void add_adding_never_index_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& adding_never_index_headers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_adding_never_index_headers();

  // repeated string deleting_never_index_headers = 25;
  int deleting_never_index_headers_size() const;
  void clear_deleting_never_index_headers();
  static const int kDeletingNeverIndexHeadersFieldNumber = 25;
  const ::std::string& deleting_never_index_headers(int index) const;
  ::std::string* mutable_deleting_never_index_headers(int index);
  void set_deleting_never_index_headers(int index, const ::std::string& value);
  void set_deleting_never_index_headers(int index, const char* value);
  void set_deleting_never_index_headers(int index, const char* value, size_t size);
  ::std::string* add_deleting_never_index_headers();
  void add_deleting_never_index_headers(const ::std::string& value);
  void add_deleting_never_index_headers(const char* value);
  void add_deleting_never_index_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& deleting_never_index_headers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deleting_never_index_headers();

  // optional uint32 dynamic_table_update_size = 26;
  void clear_dynamic_table_update_size();
  static const int kDynamicTableUpdateSizeFieldNumber = 26;
  ::google::protobuf::uint32 dynamic_table_update_size() const;
  void set_dynamic_table_update_size(::google::protobuf::uint32 value);

  // optional bool with_huffman = 27;
  void clear_with_huffman();
  static const int kWithHuffmanFieldNumber = 27;
  bool with_huffman() const;
  void set_with_huffman(bool value);

  // optional string headers_frame_padding = 28;
  void clear_headers_frame_padding();
  static const int kHeadersFramePaddingFieldNumber = 28;
  const ::std::string& headers_frame_padding() const;
  void set_headers_frame_padding(const ::std::string& value);
  void set_headers_frame_padding(const char* value);
  void set_headers_frame_padding(const char* value, size_t size);
  ::std::string* mutable_headers_frame_padding();
  ::std::string* release_headers_frame_padding();
  void set_allocated_headers_frame_padding(::std::string* headers_frame_padding);

  // optional string data_frame_padding = 29;
  void clear_data_frame_padding();
  static const int kDataFramePaddingFieldNumber = 29;
  const ::std::string& data_frame_padding() const;
  void set_data_frame_padding(const ::std::string& value);
  void set_data_frame_padding(const char* value);
  void set_data_frame_padding(const char* value, size_t size);
  ::std::string* mutable_data_frame_padding();
  ::std::string* release_data_frame_padding();
  void set_allocated_data_frame_padding(::std::string* data_frame_padding);

  // optional string push_promise_frame_padding = 30;
  void clear_push_promise_frame_padding();
  static const int kPushPromiseFramePaddingFieldNumber = 30;
  const ::std::string& push_promise_frame_padding() const;
  void set_push_promise_frame_padding(const ::std::string& value);
  void set_push_promise_frame_padding(const char* value);
  void set_push_promise_frame_padding(const char* value, size_t size);
  ::std::string* mutable_push_promise_frame_padding();
  ::std::string* release_push_promise_frame_padding();
  void set_allocated_push_promise_frame_padding(::std::string* push_promise_frame_padding);

  // map<uint32, uint32> settings = 31;
  int settings_size() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 31;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      settings() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_settings();

  // @@protoc_insertion_point(class_scope:HttpMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 http_major_;
  ::google::protobuf::int32 http_minor_;
  ::google::protobuf::int32 content_length_;
  ::google::protobuf::int32 method_;
  ::google::protobuf::int32 status_code_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      HttpMsg_HeadersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > headers_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 encoding_;
  float keep_alive_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      HttpMsg_ParamsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::HttpMsg_Upgrade* upgrade_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr hpack_data_;
  ::google::protobuf::uint32 stream_id_;
  bool is_decoding_;
  bool chunk_notice_;
  bool with_huffman_;
  ::google::protobuf::RepeatedPtrField< ::std::string> adding_without_index_headers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deleting_without_index_headers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> adding_never_index_headers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deleting_never_index_headers_;
  ::google::protobuf::internal::ArenaStringPtr headers_frame_padding_;
  ::google::protobuf::internal::ArenaStringPtr data_frame_padding_;
  ::google::protobuf::internal::ArenaStringPtr push_promise_frame_padding_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 >
      HttpMsg_SettingsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > settings_;
  ::google::protobuf::uint32 dynamic_table_update_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_http_2eproto();
  friend void protobuf_AssignDesc_http_2eproto();
  friend void protobuf_ShutdownFile_http_2eproto();

  void InitAsDefaultInstance();
  static HttpMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpMsg_Upgrade

// optional bool is_upgrade = 1;
inline void HttpMsg_Upgrade::clear_is_upgrade() {
  is_upgrade_ = false;
}
inline bool HttpMsg_Upgrade::is_upgrade() const {
  // @@protoc_insertion_point(field_get:HttpMsg.Upgrade.is_upgrade)
  return is_upgrade_;
}
inline void HttpMsg_Upgrade::set_is_upgrade(bool value) {
  
  is_upgrade_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.Upgrade.is_upgrade)
}

// optional string protocol = 2;
inline void HttpMsg_Upgrade::clear_protocol() {
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg_Upgrade::protocol() const {
  // @@protoc_insertion_point(field_get:HttpMsg.Upgrade.protocol)
  return protocol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Upgrade::set_protocol(const ::std::string& value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.Upgrade.protocol)
}
inline void HttpMsg_Upgrade::set_protocol(const char* value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.Upgrade.protocol)
}
inline void HttpMsg_Upgrade::set_protocol(const char* value, size_t size) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.Upgrade.protocol)
}
inline ::std::string* HttpMsg_Upgrade::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.Upgrade.protocol)
  return protocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg_Upgrade::release_protocol() {
  // @@protoc_insertion_point(field_release:HttpMsg.Upgrade.protocol)
  
  return protocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Upgrade::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.Upgrade.protocol)
}

// -------------------------------------------------------------------

// HttpMsg

// optional int32 type = 1;
inline void HttpMsg::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::type() const {
  // @@protoc_insertion_point(field_get:HttpMsg.type)
  return type_;
}
inline void HttpMsg::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.type)
}

// optional int32 http_major = 2;
inline void HttpMsg::clear_http_major() {
  http_major_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::http_major() const {
  // @@protoc_insertion_point(field_get:HttpMsg.http_major)
  return http_major_;
}
inline void HttpMsg::set_http_major(::google::protobuf::int32 value) {
  
  http_major_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.http_major)
}

// optional int32 http_minor = 3;
inline void HttpMsg::clear_http_minor() {
  http_minor_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::http_minor() const {
  // @@protoc_insertion_point(field_get:HttpMsg.http_minor)
  return http_minor_;
}
inline void HttpMsg::set_http_minor(::google::protobuf::int32 value) {
  
  http_minor_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.http_minor)
}

// optional int32 content_length = 4;
inline void HttpMsg::clear_content_length() {
  content_length_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::content_length() const {
  // @@protoc_insertion_point(field_get:HttpMsg.content_length)
  return content_length_;
}
inline void HttpMsg::set_content_length(::google::protobuf::int32 value) {
  
  content_length_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.content_length)
}

// optional int32 method = 5;
inline void HttpMsg::clear_method() {
  method_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::method() const {
  // @@protoc_insertion_point(field_get:HttpMsg.method)
  return method_;
}
inline void HttpMsg::set_method(::google::protobuf::int32 value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.method)
}

// optional int32 status_code = 6;
inline void HttpMsg::clear_status_code() {
  status_code_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::status_code() const {
  // @@protoc_insertion_point(field_get:HttpMsg.status_code)
  return status_code_;
}
inline void HttpMsg::set_status_code(::google::protobuf::int32 value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.status_code)
}

// optional int32 encoding = 7;
inline void HttpMsg::clear_encoding() {
  encoding_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::encoding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.encoding)
  return encoding_;
}
inline void HttpMsg::set_encoding(::google::protobuf::int32 value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.encoding)
}

// optional string url = 8;
inline void HttpMsg::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::url() const {
  // @@protoc_insertion_point(field_get:HttpMsg.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.url)
}
inline void HttpMsg::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.url)
}
inline void HttpMsg::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.url)
}
inline ::std::string* HttpMsg::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_url() {
  // @@protoc_insertion_point(field_release:HttpMsg.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.url)
}

// map<string, string> headers = 9;
inline int HttpMsg::headers_size() const {
  return headers_.size();
}
inline void HttpMsg::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HttpMsg::headers() const {
  // @@protoc_insertion_point(field_map:HttpMsg.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HttpMsg::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:HttpMsg.headers)
  return headers_.MutableMap();
}

// optional bytes body = 10;
inline void HttpMsg::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::body() const {
  // @@protoc_insertion_point(field_get:HttpMsg.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.body)
}
inline void HttpMsg::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.body)
}
inline void HttpMsg::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.body)
}
inline ::std::string* HttpMsg::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_body() {
  // @@protoc_insertion_point(field_release:HttpMsg.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.body)
}

// map<string, string> params = 11;
inline int HttpMsg::params_size() const {
  return params_.size();
}
inline void HttpMsg::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HttpMsg::params() const {
  // @@protoc_insertion_point(field_map:HttpMsg.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HttpMsg::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:HttpMsg.params)
  return params_.MutableMap();
}

// optional .HttpMsg.Upgrade upgrade = 12;
inline bool HttpMsg::has_upgrade() const {
  return !_is_default_instance_ && upgrade_ != NULL;
}
inline void HttpMsg::clear_upgrade() {
  if (GetArenaNoVirtual() == NULL && upgrade_ != NULL) delete upgrade_;
  upgrade_ = NULL;
}
inline const ::HttpMsg_Upgrade& HttpMsg::upgrade() const {
  // @@protoc_insertion_point(field_get:HttpMsg.upgrade)
  return upgrade_ != NULL ? *upgrade_ : *default_instance_->upgrade_;
}
inline ::HttpMsg_Upgrade* HttpMsg::mutable_upgrade() {
  
  if (upgrade_ == NULL) {
    upgrade_ = new ::HttpMsg_Upgrade;
  }
  // @@protoc_insertion_point(field_mutable:HttpMsg.upgrade)
  return upgrade_;
}
inline ::HttpMsg_Upgrade* HttpMsg::release_upgrade() {
  // @@protoc_insertion_point(field_release:HttpMsg.upgrade)
  
  ::HttpMsg_Upgrade* temp = upgrade_;
  upgrade_ = NULL;
  return temp;
}
inline void HttpMsg::set_allocated_upgrade(::HttpMsg_Upgrade* upgrade) {
  delete upgrade_;
  upgrade_ = upgrade;
  if (upgrade) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.upgrade)
}

// optional float keep_alive = 13;
inline void HttpMsg::clear_keep_alive() {
  keep_alive_ = 0;
}
inline float HttpMsg::keep_alive() const {
  // @@protoc_insertion_point(field_get:HttpMsg.keep_alive)
  return keep_alive_;
}
inline void HttpMsg::set_keep_alive(float value) {
  
  keep_alive_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.keep_alive)
}

// optional string path = 14;
inline void HttpMsg::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::path() const {
  // @@protoc_insertion_point(field_get:HttpMsg.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.path)
}
inline void HttpMsg::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.path)
}
inline void HttpMsg::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.path)
}
inline ::std::string* HttpMsg::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_path() {
  // @@protoc_insertion_point(field_release:HttpMsg.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.path)
}

// optional bool is_decoding = 15;
inline void HttpMsg::clear_is_decoding() {
  is_decoding_ = false;
}
inline bool HttpMsg::is_decoding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.is_decoding)
  return is_decoding_;
}
inline void HttpMsg::set_is_decoding(bool value) {
  
  is_decoding_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.is_decoding)
}

// optional bool chunk_notice = 19;
inline void HttpMsg::clear_chunk_notice() {
  chunk_notice_ = false;
}
inline bool HttpMsg::chunk_notice() const {
  // @@protoc_insertion_point(field_get:HttpMsg.chunk_notice)
  return chunk_notice_;
}
inline void HttpMsg::set_chunk_notice(bool value) {
  
  chunk_notice_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.chunk_notice)
}

// optional uint32 stream_id = 20;
inline void HttpMsg::clear_stream_id() {
  stream_id_ = 0u;
}
inline ::google::protobuf::uint32 HttpMsg::stream_id() const {
  // @@protoc_insertion_point(field_get:HttpMsg.stream_id)
  return stream_id_;
}
inline void HttpMsg::set_stream_id(::google::protobuf::uint32 value) {
  
  stream_id_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.stream_id)
}

// optional string hpack_data = 21;
inline void HttpMsg::clear_hpack_data() {
  hpack_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::hpack_data() const {
  // @@protoc_insertion_point(field_get:HttpMsg.hpack_data)
  return hpack_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_hpack_data(const ::std::string& value) {
  
  hpack_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.hpack_data)
}
inline void HttpMsg::set_hpack_data(const char* value) {
  
  hpack_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.hpack_data)
}
inline void HttpMsg::set_hpack_data(const char* value, size_t size) {
  
  hpack_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.hpack_data)
}
inline ::std::string* HttpMsg::mutable_hpack_data() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.hpack_data)
  return hpack_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_hpack_data() {
  // @@protoc_insertion_point(field_release:HttpMsg.hpack_data)
  
  return hpack_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_hpack_data(::std::string* hpack_data) {
  if (hpack_data != NULL) {
    
  } else {
    
  }
  hpack_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hpack_data);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.hpack_data)
}

// repeated string adding_without_index_headers = 22;
inline int HttpMsg::adding_without_index_headers_size() const {
  return adding_without_index_headers_.size();
}
inline void HttpMsg::clear_adding_without_index_headers() {
  adding_without_index_headers_.Clear();
}
inline const ::std::string& HttpMsg::adding_without_index_headers(int index) const {
  // @@protoc_insertion_point(field_get:HttpMsg.adding_without_index_headers)
  return adding_without_index_headers_.Get(index);
}
inline ::std::string* HttpMsg::mutable_adding_without_index_headers(int index) {
  // @@protoc_insertion_point(field_mutable:HttpMsg.adding_without_index_headers)
  return adding_without_index_headers_.Mutable(index);
}
inline void HttpMsg::set_adding_without_index_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:HttpMsg.adding_without_index_headers)
  adding_without_index_headers_.Mutable(index)->assign(value);
}
inline void HttpMsg::set_adding_without_index_headers(int index, const char* value) {
  adding_without_index_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HttpMsg.adding_without_index_headers)
}
inline void HttpMsg::set_adding_without_index_headers(int index, const char* value, size_t size) {
  adding_without_index_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.adding_without_index_headers)
}
inline ::std::string* HttpMsg::add_adding_without_index_headers() {
  // @@protoc_insertion_point(field_add_mutable:HttpMsg.adding_without_index_headers)
  return adding_without_index_headers_.Add();
}
inline void HttpMsg::add_adding_without_index_headers(const ::std::string& value) {
  adding_without_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HttpMsg.adding_without_index_headers)
}
inline void HttpMsg::add_adding_without_index_headers(const char* value) {
  adding_without_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HttpMsg.adding_without_index_headers)
}
inline void HttpMsg::add_adding_without_index_headers(const char* value, size_t size) {
  adding_without_index_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HttpMsg.adding_without_index_headers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HttpMsg::adding_without_index_headers() const {
  // @@protoc_insertion_point(field_list:HttpMsg.adding_without_index_headers)
  return adding_without_index_headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HttpMsg::mutable_adding_without_index_headers() {
  // @@protoc_insertion_point(field_mutable_list:HttpMsg.adding_without_index_headers)
  return &adding_without_index_headers_;
}

// repeated string deleting_without_index_headers = 23;
inline int HttpMsg::deleting_without_index_headers_size() const {
  return deleting_without_index_headers_.size();
}
inline void HttpMsg::clear_deleting_without_index_headers() {
  deleting_without_index_headers_.Clear();
}
inline const ::std::string& HttpMsg::deleting_without_index_headers(int index) const {
  // @@protoc_insertion_point(field_get:HttpMsg.deleting_without_index_headers)
  return deleting_without_index_headers_.Get(index);
}
inline ::std::string* HttpMsg::mutable_deleting_without_index_headers(int index) {
  // @@protoc_insertion_point(field_mutable:HttpMsg.deleting_without_index_headers)
  return deleting_without_index_headers_.Mutable(index);
}
inline void HttpMsg::set_deleting_without_index_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:HttpMsg.deleting_without_index_headers)
  deleting_without_index_headers_.Mutable(index)->assign(value);
}
inline void HttpMsg::set_deleting_without_index_headers(int index, const char* value) {
  deleting_without_index_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HttpMsg.deleting_without_index_headers)
}
inline void HttpMsg::set_deleting_without_index_headers(int index, const char* value, size_t size) {
  deleting_without_index_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.deleting_without_index_headers)
}
inline ::std::string* HttpMsg::add_deleting_without_index_headers() {
  // @@protoc_insertion_point(field_add_mutable:HttpMsg.deleting_without_index_headers)
  return deleting_without_index_headers_.Add();
}
inline void HttpMsg::add_deleting_without_index_headers(const ::std::string& value) {
  deleting_without_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HttpMsg.deleting_without_index_headers)
}
inline void HttpMsg::add_deleting_without_index_headers(const char* value) {
  deleting_without_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HttpMsg.deleting_without_index_headers)
}
inline void HttpMsg::add_deleting_without_index_headers(const char* value, size_t size) {
  deleting_without_index_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HttpMsg.deleting_without_index_headers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HttpMsg::deleting_without_index_headers() const {
  // @@protoc_insertion_point(field_list:HttpMsg.deleting_without_index_headers)
  return deleting_without_index_headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HttpMsg::mutable_deleting_without_index_headers() {
  // @@protoc_insertion_point(field_mutable_list:HttpMsg.deleting_without_index_headers)
  return &deleting_without_index_headers_;
}

// repeated string adding_never_index_headers = 24;
inline int HttpMsg::adding_never_index_headers_size() const {
  return adding_never_index_headers_.size();
}
inline void HttpMsg::clear_adding_never_index_headers() {
  adding_never_index_headers_.Clear();
}
inline const ::std::string& HttpMsg::adding_never_index_headers(int index) const {
  // @@protoc_insertion_point(field_get:HttpMsg.adding_never_index_headers)
  return adding_never_index_headers_.Get(index);
}
inline ::std::string* HttpMsg::mutable_adding_never_index_headers(int index) {
  // @@protoc_insertion_point(field_mutable:HttpMsg.adding_never_index_headers)
  return adding_never_index_headers_.Mutable(index);
}
inline void HttpMsg::set_adding_never_index_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:HttpMsg.adding_never_index_headers)
  adding_never_index_headers_.Mutable(index)->assign(value);
}
inline void HttpMsg::set_adding_never_index_headers(int index, const char* value) {
  adding_never_index_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HttpMsg.adding_never_index_headers)
}
inline void HttpMsg::set_adding_never_index_headers(int index, const char* value, size_t size) {
  adding_never_index_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.adding_never_index_headers)
}
inline ::std::string* HttpMsg::add_adding_never_index_headers() {
  // @@protoc_insertion_point(field_add_mutable:HttpMsg.adding_never_index_headers)
  return adding_never_index_headers_.Add();
}
inline void HttpMsg::add_adding_never_index_headers(const ::std::string& value) {
  adding_never_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HttpMsg.adding_never_index_headers)
}
inline void HttpMsg::add_adding_never_index_headers(const char* value) {
  adding_never_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HttpMsg.adding_never_index_headers)
}
inline void HttpMsg::add_adding_never_index_headers(const char* value, size_t size) {
  adding_never_index_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HttpMsg.adding_never_index_headers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HttpMsg::adding_never_index_headers() const {
  // @@protoc_insertion_point(field_list:HttpMsg.adding_never_index_headers)
  return adding_never_index_headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HttpMsg::mutable_adding_never_index_headers() {
  // @@protoc_insertion_point(field_mutable_list:HttpMsg.adding_never_index_headers)
  return &adding_never_index_headers_;
}

// repeated string deleting_never_index_headers = 25;
inline int HttpMsg::deleting_never_index_headers_size() const {
  return deleting_never_index_headers_.size();
}
inline void HttpMsg::clear_deleting_never_index_headers() {
  deleting_never_index_headers_.Clear();
}
inline const ::std::string& HttpMsg::deleting_never_index_headers(int index) const {
  // @@protoc_insertion_point(field_get:HttpMsg.deleting_never_index_headers)
  return deleting_never_index_headers_.Get(index);
}
inline ::std::string* HttpMsg::mutable_deleting_never_index_headers(int index) {
  // @@protoc_insertion_point(field_mutable:HttpMsg.deleting_never_index_headers)
  return deleting_never_index_headers_.Mutable(index);
}
inline void HttpMsg::set_deleting_never_index_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:HttpMsg.deleting_never_index_headers)
  deleting_never_index_headers_.Mutable(index)->assign(value);
}
inline void HttpMsg::set_deleting_never_index_headers(int index, const char* value) {
  deleting_never_index_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HttpMsg.deleting_never_index_headers)
}
inline void HttpMsg::set_deleting_never_index_headers(int index, const char* value, size_t size) {
  deleting_never_index_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.deleting_never_index_headers)
}
inline ::std::string* HttpMsg::add_deleting_never_index_headers() {
  // @@protoc_insertion_point(field_add_mutable:HttpMsg.deleting_never_index_headers)
  return deleting_never_index_headers_.Add();
}
inline void HttpMsg::add_deleting_never_index_headers(const ::std::string& value) {
  deleting_never_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HttpMsg.deleting_never_index_headers)
}
inline void HttpMsg::add_deleting_never_index_headers(const char* value) {
  deleting_never_index_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HttpMsg.deleting_never_index_headers)
}
inline void HttpMsg::add_deleting_never_index_headers(const char* value, size_t size) {
  deleting_never_index_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HttpMsg.deleting_never_index_headers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HttpMsg::deleting_never_index_headers() const {
  // @@protoc_insertion_point(field_list:HttpMsg.deleting_never_index_headers)
  return deleting_never_index_headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HttpMsg::mutable_deleting_never_index_headers() {
  // @@protoc_insertion_point(field_mutable_list:HttpMsg.deleting_never_index_headers)
  return &deleting_never_index_headers_;
}

// optional uint32 dynamic_table_update_size = 26;
inline void HttpMsg::clear_dynamic_table_update_size() {
  dynamic_table_update_size_ = 0u;
}
inline ::google::protobuf::uint32 HttpMsg::dynamic_table_update_size() const {
  // @@protoc_insertion_point(field_get:HttpMsg.dynamic_table_update_size)
  return dynamic_table_update_size_;
}
inline void HttpMsg::set_dynamic_table_update_size(::google::protobuf::uint32 value) {
  
  dynamic_table_update_size_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.dynamic_table_update_size)
}

// optional bool with_huffman = 27;
inline void HttpMsg::clear_with_huffman() {
  with_huffman_ = false;
}
inline bool HttpMsg::with_huffman() const {
  // @@protoc_insertion_point(field_get:HttpMsg.with_huffman)
  return with_huffman_;
}
inline void HttpMsg::set_with_huffman(bool value) {
  
  with_huffman_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.with_huffman)
}

// optional string headers_frame_padding = 28;
inline void HttpMsg::clear_headers_frame_padding() {
  headers_frame_padding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::headers_frame_padding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.headers_frame_padding)
  return headers_frame_padding_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_headers_frame_padding(const ::std::string& value) {
  
  headers_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.headers_frame_padding)
}
inline void HttpMsg::set_headers_frame_padding(const char* value) {
  
  headers_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.headers_frame_padding)
}
inline void HttpMsg::set_headers_frame_padding(const char* value, size_t size) {
  
  headers_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.headers_frame_padding)
}
inline ::std::string* HttpMsg::mutable_headers_frame_padding() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.headers_frame_padding)
  return headers_frame_padding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_headers_frame_padding() {
  // @@protoc_insertion_point(field_release:HttpMsg.headers_frame_padding)
  
  return headers_frame_padding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_headers_frame_padding(::std::string* headers_frame_padding) {
  if (headers_frame_padding != NULL) {
    
  } else {
    
  }
  headers_frame_padding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headers_frame_padding);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.headers_frame_padding)
}

// optional string data_frame_padding = 29;
inline void HttpMsg::clear_data_frame_padding() {
  data_frame_padding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::data_frame_padding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.data_frame_padding)
  return data_frame_padding_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_data_frame_padding(const ::std::string& value) {
  
  data_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.data_frame_padding)
}
inline void HttpMsg::set_data_frame_padding(const char* value) {
  
  data_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.data_frame_padding)
}
inline void HttpMsg::set_data_frame_padding(const char* value, size_t size) {
  
  data_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.data_frame_padding)
}
inline ::std::string* HttpMsg::mutable_data_frame_padding() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.data_frame_padding)
  return data_frame_padding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_data_frame_padding() {
  // @@protoc_insertion_point(field_release:HttpMsg.data_frame_padding)
  
  return data_frame_padding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_data_frame_padding(::std::string* data_frame_padding) {
  if (data_frame_padding != NULL) {
    
  } else {
    
  }
  data_frame_padding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_frame_padding);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.data_frame_padding)
}

// optional string push_promise_frame_padding = 30;
inline void HttpMsg::clear_push_promise_frame_padding() {
  push_promise_frame_padding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::push_promise_frame_padding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.push_promise_frame_padding)
  return push_promise_frame_padding_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_push_promise_frame_padding(const ::std::string& value) {
  
  push_promise_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.push_promise_frame_padding)
}
inline void HttpMsg::set_push_promise_frame_padding(const char* value) {
  
  push_promise_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.push_promise_frame_padding)
}
inline void HttpMsg::set_push_promise_frame_padding(const char* value, size_t size) {
  
  push_promise_frame_padding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.push_promise_frame_padding)
}
inline ::std::string* HttpMsg::mutable_push_promise_frame_padding() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.push_promise_frame_padding)
  return push_promise_frame_padding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_push_promise_frame_padding() {
  // @@protoc_insertion_point(field_release:HttpMsg.push_promise_frame_padding)
  
  return push_promise_frame_padding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_push_promise_frame_padding(::std::string* push_promise_frame_padding) {
  if (push_promise_frame_padding != NULL) {
    
  } else {
    
  }
  push_promise_frame_padding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), push_promise_frame_padding);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.push_promise_frame_padding)
}

// map<uint32, uint32> settings = 31;
inline int HttpMsg::settings_size() const {
  return settings_.size();
}
inline void HttpMsg::clear_settings() {
  settings_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
HttpMsg::settings() const {
  // @@protoc_insertion_point(field_map:HttpMsg.settings)
  return settings_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
HttpMsg::mutable_settings() {
  // @@protoc_insertion_point(field_mutable_map:HttpMsg.settings)
  return settings_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_http_2eproto__INCLUDED
